<h2>broccoli-concat-analyser</h2>

<p>
  <code><a href="https://github.com/stefanpenner/broccoli-concat-analyser">broccoli-concat-analyser</a></code>
  allows us to visualize our app and vendor code sizes and determine where the most bloat is,
  so we can evaluate which things we want to keep and where we can cut things out.
</p>

{{#code-block}}
  npm install -g broccoli-concat-analyser
  CONCAT_STATS=true ember s
  broccoli-concat-analyser ./concat-stats-for
{{/code-block}}

<p>
  Looking through your vendor code, identifying and removing bloat helps the entire community,
  not just your app. If we all work together, we can ensure all the addons are as small and
  performant as possible.
</p>

<h2>Exercise</h2>

<p>
  After running the steps from above, we should have a nice interactive chart of our dep sizes.
  If we are looking for ways we can cut down on our bundle size, we should consider which addons are necessary, and
  which we could use alternate addons for or just copy the parts we need over ourselves.
  We can go through an example here, which I encountered in real life, where ember-cp-validations
  was more bloat than ember-changeset + ember-changeset-validations, so I switched to them.
</p>

<h3>Input</h3>
{{input placeholder="Cannot be blank" value=testObject.testField}}
{{error}}

<p>
  First we should install the new packages, which should already be installed for you, but just in case.
</p>

{{#code-block}}
  ember install ember-changeset
  ember install ember-changeset-validations
{{/code-block}}

<p>
  Then we need to change how we are setting up the validations in the controller.
</p>

{{#code-block language="javascript"}}
  //controllers/broccoli-concat-analyser.js
  import Changeset from 'ember-changeset';
  import Controller from '@ember/controller';
  import EmberObject from '@ember/object';
  import { alias } from '@ember/object/computed';
  import lookupValidator from 'ember-changeset-validations';
  import {
    validatePresence
  } from 'ember-changeset-validations/validators';

  const Validations = {
    testField: validatePresence(true)
  };

  export default Controller.extend({
    testObject: null,

    errors: alias('testObject.errors'),

    init() {
      this._super(...arguments);

      const testObject = EmberObject.extend({
        testField: null
      }).create();

      this.set('testObject', new Changeset(testObject, lookupValidator(Validations), Validations));
    }
  });
{{/code-block}}