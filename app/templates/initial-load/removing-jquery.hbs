<h2>Removing jQuery</h2>

<p>
  Ember is actively working to make jQuery optional, but for now we need to complete a few extra manual steps to remove it.
</p>

<p>
  <code>ember-native-dom-event-dispatcher</code> is no longer needed on latest Ember,
  and <code>ember-maybe-import-regenerator</code> is already added to your package.json on latest Ember.
  <code>ember-native-dom-helpers</code> is also largely unnecessary for tests, thanks to the recent
  refactor of the default Ember test helpers.
</p>

<p>
  The only things we really need to do are remove <code>ember-ajax</code>, and use
  <code><a href="https://github.com/ember-cli/ember-fetch">ember-fetch</a></code> instead,
  as well as patch up some issues with fastboot and fetch.
</p>

<h2>Baseline</h2>

<p>Before we begin, let's use lighthouse to get the current metrics for our app.</p>

{{#code-block}}
  lighthouse http://localhost:4200/initial-load/removing-jquery --view
{{/code-block}}

<h2>Exercise</h2>

{{#code-block}}
  ember install ember-fetch
{{/code-block}}

<p>
  We then will want to remove <code>ember-ajax</code> from our <code>package.json</code> and run <code>yarn</code>
  to make sure we clean up the unused package.
</p>

<p>
  Create a file at <code>fastboot/initializers/ajax.js</code> that includes the following:
</p>

{{#code-block language='javascript'}}
  // fastboot/initializers/ajax.js

  export default {
    name: 'ajax-service',
    initialize() {
      // noop
      // This is to override Fastboot's initializer which prevents ember-fetch from working
      // https://github.com/ember-fastboot/ember-cli-fastboot/blob/master/fastboot/initializers/ajax.js
    }
  }
{{/code-block}}

<p>
  To find old usages of jQuery easily, so you know where all the things you should remove are, you can enabled
  the <code>no-jquery</code> rule of <code>eslint-plugin-ember</code>. Since it is now included in Ember apps by default,
  we just need to add it to our <code>rules</code> in <code>.eslintrc.js</code>.
</p>

{{#code-block language='javascript'}}
  rules: {
    'ember/no-jquery': 'error'
  }
{{/code-block}}

<p>
  After we are confident we have removed all jQuery usage, we can exclude it from our vendor bundle in ember-cli-build.js.
</p>

{{#code-block language="javascript"}}
  //ember-cli-build.js
  vendorFiles: { 'jquery.js': null }
{{/code-block}}

<p>
  This app does not really use ember-data, but it does include it as a dependency. Since most people do use it, we should go ahead
  and use the fetch mixin for our adapter just to illustrate how it is done.
</p>
{{#code-block language="javascript"}}
  //app/adapters/application.js
  import AdapterFetch from 'ember-fetch/mixins/adapter-fetch';
  import JSONAPIAdapter from 'ember-data/adapters/json-api';

  export default JSONAPIAdapter.extend(AdapterFetch, {
    ajaxOptions() {
      const options = this._super(...arguments) || {};
      options.headers = options.headers || {};
      options.headers['Content-Type'] = 'application/vnd.api+json';
      return options;
    }
  });
{{/code-block}}

<p>
  We did not have any <code>this.$</code> or jQuery usages in our tests because we started with the new test syntax, but for older
  apps that do use it, you can use <a href="https://github.com/simonihmig/ember-test-helpers-codemod">https://github.com/simonihmig/ember-test-helpers-codemod</a>
  to convert your tests to the new helpers.
</p>
